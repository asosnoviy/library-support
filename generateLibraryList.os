#Использовать Json
#Использовать tempfiles
#Использовать "."

Перем мВременныйКаталогУстановки;
Перем мПутьКХабу;
Перем мКаталогХаб;

Процедура Сформироватьlisttxt()
    ПутьКХабу = АргументыКоманднойСтроки[0];
    КаталогХаб = Новый Файл(ПутьКХабу); 
    ПутьКСпискуПакетов = ОбъединитьПути(КаталогХаб.ПолноеИмя, "list.txt");
    
    НайденныеФайлы = НайтиФайлы(КаталогХаб.ПолноеИмя, ПолучитьМаскуВсеФайлы(), Ложь);
    
    ЗаписьТекста = Новый ЗаписьТекста(ПутьКСпискуПакетов, КодировкаТекста.UTF8NoBom);
    
    Для Каждого НайденныйФайл Из НайденныеФайлы Цикл
        
        Если НайденныйФайл.ЭтоФайл() Тогда
            Продолжить;
        КонецЕсли;
        
        ЗаписьТекста.ЗаписатьСтроку(НайденныйФайл.Имя);
        
    КонецЦикла;
    
    ЗаписьТекста.Закрыть();
КонецПроцедуры

Процедура СформироватьPackageListJson()
    
    мПутьКХабу = АргументыКоманднойСтроки[0];
    мКаталогХаб = Новый Файл(мПутьКХабу); 
    ПутьКСпискуПакетов = ОбъединитьПути(мКаталогХаб.ПолноеИмя, "packagelist.json");
    СписокПакетовВХабе = ПолучитьТекущийСписок(ПутьКСпискуПакетов); 
    
    НайденныеКаталоги = НайтиФайлы(мКаталогХаб.ПолноеИмя, "*.", Ложь);
  
    Для Каждого Каталог Из НайденныеКаталоги Цикл

        Если Каталог.ЭтоФайл() Тогда
            Продолжить;
        КонецЕсли;
        
        ДобавитьПакетВСписок(Каталог.Имя, СписокПакетовВХабе);
              
    КонецЦикла;

    ЗаписатьСписокПакетовВФайл(СписокПакетовВХабе, ПутьКСпискуПакетов);
     
КонецПроцедуры 

Процедура ДобавитьПакетВСписок(ИмяПакета, СписокПакетовВХабе)
	
    Если СписокПакетовВХабе.Получить(ИмяПакета) = Неопределено Тогда 
    	СтруктураПакета = ПолучитьШаблонПакета();
    Иначе
        СтруктураПакета =  СписокПакетовВХабе[ИмяПакета];   
	КонецЕсли;

   		СтруктураПакета.Вставить("name",ИмяПакета);
		ФайлАрхива = ОбъединитьПути(мПутьКХабу, ИмяПакета,ИмяПакета + ".ospx");
		ЧтениеПакета = Новый ЧтениеZipФайла;
		ЧтениеПакета.Открыть(ФайлАрхива);

		ФайлМетаданных = ИзвлечьОбязательныйФайл(ЧтениеПакета,"opm-metadata.xml");

		
		Метаданные = ПрочитатьМетаданныеПакета(ФайлМетаданных);
	
		СтруктураПакета.Вставить("version",Метаданные.Свойства().Версия);
        // СтруктураПакета.Вставить("dependencies",Метаданные.Зависимости());
        СтруктураПакета.Вставить("dependencies",Новый Массив);

	
		ПолучитьВерсииПакетаВХабе(СтруктураПакета,ИмяПакета);


		СписокПакетовВХабе.Вставить(ИмяПакета,СтруктураПакета);

КонецПроцедуры    

Функция ПолучитьВерсииПакетаВХабе(СтруктураПакета,ИмяПакета)
	ПутьКВерсиямПакетов = ОбъединитьПути(мПутьКХабу, ИмяПакета);
	НайденныеПакеты = НайтиФайлы(ПутьКВерсиямПакетов, "*.ospx", Ложь);
  
    Для Каждого ФайВерсии Из НайденныеПакеты Цикл
		
		ИмяФайлаВерсии = ФайВерсии.ИмяБезРасширения;
			
        Если ИмяФайлаВерсии =  ИмяПакета Тогда 
           Продолжить;
        КонецЕсли;    

	
        Версия = СтрЗаменить(ИмяФайлаВерсии ,ИмяПакета + "-","");
    
        СтруктураПакета["avalibleversions"].Вставить(Версия,Новый Структура);
    КонецЦикла    


КонецФункции    

Функция ИзвлечьОбязательныйФайл(Знач Чтение, Знач ИмяФайла)
	мВременныйКаталогУстановки = ВременныеФайлы.СоздатьКаталог();

	Элемент = Чтение.Элементы.Найти(ИмяФайла);
	Если Элемент = Неопределено Тогда
		ВызватьИсключение "Неверная структура пакета. Не найден файл " + ИмяФайла;
	КонецЕсли;
	
	Чтение.Извлечь(Элемент, мВременныйКаталогУстановки);
	
	Возврат ОбъединитьПути(мВременныйКаталогУстановки, ИмяФайла);
	
КонецФункции

Функция ПолучитьШаблонПакета()

	СтруктураПакета = Новый Структура;
    СтруктураПакета.Вставить("name","");
    СтруктураПакета.Вставить("description","");
    СтруктураПакета.Вставить("version","");
    СтруктураПакета.Вставить("dependencies",Новый Массив);
    СтруктураПакета.Вставить("avalibleversions",Новый Соответствие);
  
	Возврат СтруктураПакета;	
КонецФункции    

Процедура  ЗаписатьСписокПакетовВФайл(СписокПакетовВХабе, ПутьКСпискуПакетов)  

    Json = Новый ПарсерJSON();
    СтрокаJson = Json.ЗаписатьJSON(СписокПакетовВХабе);
    ЗаписьТекста = Новый ЗаписьТекста(ПутьКСпискуПакетов, КодировкаТекста.UTF8NoBom);
    ЗаписьТекста.Записать(СтрокаJson);
    ЗаписьТекста.Закрыть();

КонецПроцедуры

Функция ПолучитьТекущийСписок(ПутьКФайлу)
    
    СписокПакетов = Новый Соответствие;
    
    МассивФайлов = НайтиФайлы(ПутьКФайлу);
    
    Если МассивФайлов.Количество() > 0 Тогда
        
        ЧтениеТекста = Новый ЧтениеТекста();
        ЧтениеТекста.Открыть(ПутьКФайлу);
        СтрокаJson = ЧтениеТекста.Прочитать();
        ЧтениеТекста.Закрыть();
        
        Json = Новый ПарсерJSON();
        СписокПакетов = Json.ПрочитатьJson(СтрокаJson);
        
    КонецЕсли;    
    
    Возврат СписокПакетов;
КонецФункции     

Функция ПрочитатьМетаданныеПакета(Знач ФайлМетаданных)
	
	Перем Метаданные;

	// Попытка
		Чтение = Новый ЧтениеXML;
		Чтение.ОткрытьФайл(ФайлМетаданных);

		Сериализатор = Новый СериализацияМетаданныхПакета;
		Метаданные = Сериализатор.ПрочитатьXML(Чтение);
		
		Чтение.Закрыть();
	// Исключение
		// Чтение.Закрыть();
		// ВызватьИсключение;
	// КонецПопытки;

	Возврат Метаданные;
	
КонецФункции

Сформироватьlisttxt();
СформироватьPackageListJson();